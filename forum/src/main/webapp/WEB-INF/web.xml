<?xml version="1.0" encoding="UTF-8"?>
<!--注意：使用该方法拆分web.xml时，如果Tomcat高于6.0.35版本，则启动Tomcat可能报错： Java.io.FileNotFoundException: Could not resolve XML resource [null] with public ID [null], system ID-->
<!--解决办法：修改conf/context.xml文件，<Context xmlBlockExternal="false">-->
<!DOCTYPE web-app [
		<!ENTITY webServiceServlet SYSTEM "config/webService-config/webServiceServlet.xml">
		<!ENTITY servletConfig SYSTEM "config/servlet-config.xml">
]>

<!--<web-app xmlns="http://java.sun.com/xml/ns/j2ee"-->
		 <!--xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"-->
		 <!--xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"-->
		 <!--version="2.4">-->
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
		  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		  xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
          version="3.0">
	<description>论坛</description>
	<display-name>whz</display-name>

	<!--初始化参数-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:/applicationContext.xml
		</param-value>
	</context-param>

	<!--声明过滤器-->
	<!--hibernateFilter-->
	<!--由于在web层的Action中使用Hibernate的延迟加载机制，所以需要配置一个OpenSessionInViewFilter过滤器，以便Hibernate的Session能够在控制器请求方法中保持打开状态。-->
	<filter>
		<filter-name>hibernateFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>hibernateFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>hibernateFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
	<!--forumFilter-->
	<!--自定义的一个验证过滤器-->
	<filter>
		<filter-name>forumFilter</filter-name>
		<filter-class>com.whz.web.filter.ForumFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>forumFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>forumFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	<!--encodingFilter-->
	<!--使用Spring的编码转换过滤器，将请求信息的编码统一转换为UTF-8，以避免中文乱码问题-->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	<!--HiddenHttpMethodFilter-->
	<!--浏览器不支持put,delete等method，由该filter将xxx?_method=delete或xxx?_method=put 转换为标准的http delete、put方法-->
	<filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<servlet-name>baobaotao</servlet-name>
	</filter-mapping>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<servlet>
		<servlet-name>baobaotao</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>WEB-INF/config/springMVC-config/baobaotao-servlet.xml</param-value>
		</init-param>
		<!--<load-on-startup>3</load-on-startup>的含义是：标记容器是否在启动的时候就加载这个servlet,-->
		<!--当值为0或者大于0时，表示容器在应用启动时就加载这个servlet；-->
		<!--当是一个负数时或者没有指定时，则指示容器在该servlet被选择时才加载。-->
		<!--正数的值越小，启动该servlet的优先级越高。-->
		<load-on-startup>3</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>baobaotao</servlet-name>
		<url-pattern>*.html</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>/static/*</url-pattern>
	</servlet-mapping>

	&servletConfig;
	&webServiceServlet;




	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
</web-app>

